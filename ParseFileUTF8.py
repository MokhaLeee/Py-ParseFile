# TPC CHANGELOG:
# W.I.P.

# 1.0:
# - Initial Release

import os, sys

INPUT_ENCODING = "utf-8"
OUTPUT_ENCODING = "utf-8"

def Parse(line):
	
	res = line.strip('\n')
	res = res.replace('[X]',	'\0')
	res = res.replace('[NL]',	'1')
	res = res.replace('[2NL]',	'2')
	res = res.replace('[A]',	'3')
	res = res.replace('[....]',	'\4')
	res = res.replace('[.....]',	'\5')
	res = res.replace('[......]',	'\6')
	res = res.replace('[.......]',	'\7')
	res = res.replace('[OpenFarLeft]',	'\8')
	res = res.replace('[OpenMidLeft]',	'\9')
	res = res.replace('[OpenLeft]',	'\10')
	res = res.replace('[OpenRight]',	'\11')
	res = res.replace('[OpenMidRight]',	'\12')
	res = res.replace('[OpenFarRight]',	'\13')
	res = res.replace('[OpenFarFarLeft]',	'\14')
	res = res.replace('[OpenFarFarRight]',	'\15')
	
	res = res.replace('[LoadFace]', '\16')
	res = res.replace('[ClearFace]', '\17')
	res = res.replace('[NormalPrint]', '\18')
	res = res.replace('[FastPrint]', '\19')
	res = res.replace('[CloseSpeechFast]', '\20')
	res = res.replace('[CloseSpeechSlow]', '\21')
	res = res.replace('[ToggleMouthMove]', '\22')
	res = res.replace('[ToggleSmile]', '\23')
	res = res.replace('[Yes]', '\24')
	res = res.replace('[No]', '\25')
	res = res.replace('[Buy/Sell]', '\26')
	res = res.replace('[ShopContinue]', '\27')
	res = res.replace('[SendToBack]', '\28')
	res = res.replace('[FastPrint]', '\29')
	res = res.replace('[.]', '\31')
	return res


def main():
	import argparse
	argParse = argparse.ArgumentParser()
	argParse.add_argument('-i','--input', help = 'input .fetext file generated by text-process')
	argParse.add_argument('-o','--output', help = 'output .dmp file to \"#incbin\" by Event-Assembler')
	
	arguments = argParse.parse_args(sys.argv[1:])
	
	input_file = arguments.input
	output_file = arguments.output
	
	if not os.path.exists(input_file):
		sys.exit("`{}` doesn't exist".format(input_file))
	
	
	with open(input_file, 'r', encoding = INPUT_ENCODING) as fi:
		with open(output_file, 'w', encoding = OUTPUT_ENCODING) as fo:
			
			for line in fi.readlines():
				fo.write( Parse(line) )
				
				


if __name__ == '__main__':
	main()